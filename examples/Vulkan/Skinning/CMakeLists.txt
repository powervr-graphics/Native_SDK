cmake_minimum_required(VERSION 3.10)
project(VulkanSkinning)
if(IOS)
	message ("Skipping VulkanSkinning : Vulkan is not supported on iOS.")
	return()
endif()

add_subdirectory(../../.. ${CMAKE_CURRENT_BINARY_DIR}/sdk)

if(PVR_PREBUILT_DEPENDENCIES)
	find_package(PVRShell REQUIRED MODULE)
	find_package(PVRUtilsVk REQUIRED MODULE)
	find_package(PVRPfx REQUIRED MODULE)
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT VulkanSkinning)

set(SRC_FILES VulkanSkinning.cpp)

set(ASSET_FOLDER ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Assets_VulkanSkinning)

# Adds an executable (or ndk library for Android) and necessary files like plists for Mac/iOS etc.
add_platform_specific_executable(VulkanSkinning ${SRC_FILES})

#################################### ASSET FILES ##########################################
# For platforms supporting it, will be packaged with the executable for runtime use.
# Will be accessible from the app with their "relative path". One call per base path

### Textures, scene files, generic resources... ###
add_assets_to_target(VulkanSkinning
	SOURCE_GROUP "assets" 
	ASSET_FOLDER ${ASSET_FOLDER} 
	BASE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../assets/Robot
	FILE_LIST 
		Robot.pod
		Arm.pvr
		Arm_astc.pvr
		Grid.pvr
		Grid_astc.pvr
		Pipes.pvr
		Pipes_astc.pvr
		RobotDiffuse.pvr
		RobotDiffuse_astc.pvr
		RobotNormal.pvr
		RobotNormal_astc.pvr
		Tiles.pvr
		Tiles_astc.pvr)

add_assets_to_target(VulkanSkinning
	SOURCE_GROUP "assets" 
	ASSET_FOLDER ${ASSET_FOLDER} 
	BASE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/
	FILE_LIST 
		Skinning.pfx)

### Shaders that need to be compiled to SpirV (Vulkan) ###
# During build time, glslangvalidator will be called to create a "<shadername.extension>.spv" file
add_spirv_shaders_to_target(VulkanSkinning 
	SOURCE_GROUP "shaders_source" 
	SPIRV_SOURCE_GROUP "shaders_generated"
	ASSET_FOLDER ${ASSET_FOLDER} 
	BASE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/
	VULKAN_TARGET_ENV vulkan1.0
	FILE_LIST
		DefaultFragShader.fsh
		DefaultVertShader.vsh
		SkinnedFragShader.fsh
		SkinnedVertShader.vsh)

# Create and adds a Windows resource file (Resources.rc) with all the assets that have been added to the target with the previous functions
add_assets_resource_file(VulkanSkinning)
###########################################################################################

# Apply SDK example specific compile and linker options
apply_example_compile_options_to_target(VulkanSkinning)

target_link_libraries(VulkanSkinning PUBLIC
	PVRShell
	PVRUtilsVk
	PVRPfx
)
